// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// insert_node
NumericMatrix insert_node(NumericMatrix heap, NumericVector node);
RcppExport SEXP _DCEM_insert_node(SEXP heapSEXP, SEXP nodeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type heap(heapSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type node(nodeSEXP);
    rcpp_result_gen = Rcpp::wrap(insert_node(heap, node));
    return rcpp_result_gen;
END_RCPP
}
// remove_node
NumericMatrix remove_node(NumericMatrix heap, int node_key);
RcppExport SEXP _DCEM_remove_node(SEXP heapSEXP, SEXP node_keySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type heap(heapSEXP);
    Rcpp::traits::input_parameter< int >::type node_key(node_keySEXP);
    rcpp_result_gen = Rcpp::wrap(remove_node(heap, node_key));
    return rcpp_result_gen;
END_RCPP
}
// get_leaves
NumericMatrix get_leaves(NumericMatrix heap);
RcppExport SEXP _DCEM_get_leaves(SEXP heapSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type heap(heapSEXP);
    rcpp_result_gen = Rcpp::wrap(get_leaves(heap));
    return rcpp_result_gen;
END_RCPP
}
// max_heapify
NumericMatrix max_heapify(NumericMatrix data, int index, int N);
RcppExport SEXP _DCEM_max_heapify(SEXP dataSEXP, SEXP indexSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type index(indexSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(max_heapify(data, index, N));
    return rcpp_result_gen;
END_RCPP
}
// build_heap
NumericMatrix build_heap(NumericMatrix data);
RcppExport SEXP _DCEM_build_heap(SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    rcpp_result_gen = Rcpp::wrap(build_heap(data));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DCEM_insert_node", (DL_FUNC) &_DCEM_insert_node, 2},
    {"_DCEM_remove_node", (DL_FUNC) &_DCEM_remove_node, 2},
    {"_DCEM_get_leaves", (DL_FUNC) &_DCEM_get_leaves, 1},
    {"_DCEM_max_heapify", (DL_FUNC) &_DCEM_max_heapify, 3},
    {"_DCEM_build_heap", (DL_FUNC) &_DCEM_build_heap, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_DCEM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
